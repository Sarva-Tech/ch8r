# Generated by Django 5.2.3 on 2025-08-15 12:04

import django.db.models.deletion
import django.utils.timezone
import secrets
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('email', 'Email'), ('slack', 'Slack'), ('discord', 'Discord'), ('whatsapp', 'WhatsApp')], max_length=20)),
                ('_config', models.TextField(db_column='config')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationAPIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('hashed_api_key', models.CharField(max_length=255)),
                ('permissions', models.JSONField(default=list)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='core.application')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationWidgetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default=secrets.token_urlsafe, max_length=128, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='widget_tokens', to='core.application')),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatrooms', to='core.application')),
            ],
        ),
        migrations.CreateModel(
            name='ChatroomParticipant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_identifier', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('role', models.CharField(choices=[('user', 'User'), ('ai_agent', 'AI Agent'), ('human_agent', 'Human Agent')], default='user', max_length=15)),
                ('chatroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='core.chatroom')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('source_type', models.CharField(choices=[('url', 'URL'), ('file', 'File'), ('text', 'Text')], default='file', max_length=20)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('uploading', 'Uploading'), ('extracting', 'Extracting'), ('processing', 'Processing'), ('processed', 'Processed'), ('reprocessing', 'Reprocessing'), ('failed', 'Failed'), ('completed', 'Completed')], default='pending', help_text='Processing status of the knowledge base item.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='knowledge_bases', to='core.application')),
            ],
        ),
        migrations.CreateModel(
            name='IngestedChunk',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('content', models.TextField()),
                ('chunk_index', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('knowledge_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='core.knowledgebase')),
            ],
        ),
        migrations.CreateModel(
            name='LLMModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('base_url', models.URLField(blank=True, max_length=500, null=True)),
                ('model_name', models.CharField(max_length=255)),
                ('model_type', models.CharField(choices=[('text', 'Text'), ('embedding', 'Embedding'), ('image', 'Image'), ('rerank', 'Re-Ranking'), ('other', 'Other')], max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message', models.TextField()),
                ('sender_identifier', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chatroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.chatroom')),
            ],
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('pms', 'Project Management System'), ('crm', 'Customer Relationship Management'), ('custom', 'Custom Integration')], max_length=50)),
                ('provider', models.CharField(max_length=255)),
                ('_config', models.TextField(db_column='config')),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('type', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='AppModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('purpose', models.CharField(choices=[('response_generation', 'Response Generation'), ('embedding', 'Embedding'), ('reranking', 'Re-ranking'), ('image_generation', 'Image Generation')], max_length=50)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_configs', to='core.application')),
                ('llm_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='application_bindings', to='core.llmmodel')),
            ],
            options={
                'unique_together': {('application', 'purpose')},
            },
        ),
        migrations.CreateModel(
            name='AppNotificationProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_notification_profiles', to='core.application')),
                ('notification_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_notification_profiles', to='core.notificationprofile')),
            ],
            options={
                'unique_together': {('application', 'notification_profile')},
            },
        ),
    ]
